version: 2
jobs:
  compile:
    docker: [{ image: 'circleci/openjdk:8-node' }]
    resource_class: medium+
    steps:
      - checkout
      - restore_cache: { key: 'gradle-wrapper-v2-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}' }
      - restore_cache: { key: 'gradle-cache-v2-{{ checksum "versions.props" }}-{{ checksum "build.gradle" }}' }
      - run: ./gradlew --no-daemon --parallel --stacktrace --max-workers=4 resolveConfigurations classes testClasses
      - save_cache:
          key: 'gradle-wrapper-v2-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}'
          paths: [ ~/.gradle/wrapper ]
      - save_cache:
          key: 'gradle-cache-v2-{{ checksum "versions.props" }}-{{ checksum "build.gradle" }}'
          paths: [ ~/.gradle/caches ]
      - store_test_results: { path: ~/junit }
      - store_artifacts: { path: ~/artifacts }
      - persist_to_workspace:
          root: /home/circleci
          paths: [ project, .gradle/init.gradle ]

  check:
    docker: [{ image: 'circleci/openjdk:8-node' }]
    resource_class: medium+
    steps:
      - attach_workspace: { at: /home/circleci }
      - restore_cache: { key: 'gradle-wrapper-v2-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}' }
      - restore_cache: { key: 'gradle-cache-v2-{{ checksum "versions.props" }}-{{ checksum "build.gradle" }}' }
      - run: ./gradlew --no-daemon --parallel --stacktrace --continue --max-workers=2 check
      - run:
          command: mkdir -p ~/junit && find . -type f -regex ".*/build/.*TEST.*xml" -exec cp --parents {} ~/junit/ \;
          when: always
      - store_test_results: { path: ~/junit }
      - store_artifacts: { path: ~/artifacts }

  unit-test:
    docker: [{ image: 'circleci/openjdk:8-node' }]
    steps:
      - attach_workspace: { at: /home/circleci }
      - restore_cache: { key: 'gradle-wrapper-v2-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}' }
      - restore_cache: { key: 'gradle-cache-v2-{{ checksum "versions.props" }}-{{ checksum "build.gradle" }}' }
      - run: ./gradlew --no-daemon --parallel --stacktrace --continue --max-workers=2 test
      - run:
          command: mkdir -p ~/junit && find . -type f -regex ".*/build/.*TEST.*xml" -exec cp --parents {} ~/junit/ \;
          when: always
      - store_test_results: { path: ~/junit }
      - store_artifacts: { path: ~/artifacts }



  trial-publish:
    docker: [{ image: 'circleci/openjdk:8-node' }]
    steps:
      - attach_workspace: { at: /home/circleci }
      - restore_cache: { key: 'gradle-wrapper-v2-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}' }
      - restore_cache: { key: 'gradle-cache-v2-{{ checksum "versions.props" }}-{{ checksum "build.gradle" }}' }
      - run: ./gradlew --no-daemon --stacktrace publishToMavenLocal
      - store_test_results: { path: ~/junit }
      - store_artifacts: { path: ~/artifacts }

  publish:
    docker: [{ image: 'circleci/openjdk:8-node' }]
    steps:
      - attach_workspace: { at: /home/circleci }
      - restore_cache: { key: 'gradle-wrapper-v2-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}' }
      - restore_cache: { key: 'gradle-cache-v2-{{ checksum "versions.props" }}-{{ checksum "build.gradle" }}' }
      - deploy:
          command: ./gradlew --no-daemon --parallel --stacktrace --continue publish
      - store_test_results: { path: ~/junit }
      - store_artifacts: { path: ~/artifacts }

workflows:
  version: 2
  build:
    jobs:
      - compile:
          filters: { tags: { only: /.*/ } }

      - unit-test:
          requires: [ compile ]
          filters: { tags: { only: /.*/ } }

      - check:
          requires: [ compile ]
          filters: { tags: { only: /.*/ } }

      - trial-publish:
          requires: [ compile ]

      - publish:
          requires: [ unit-test, check ]
          filters: { tags: { only: /.*/ }, branches: { only: develop } }

